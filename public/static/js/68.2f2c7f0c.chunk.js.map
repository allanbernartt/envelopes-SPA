{"version":3,"file":"static/js/68.2f2c7f0c.chunk.js","mappings":"4PAwDA,UAhD0B,WAEtB,IAwBIA,EAxBIC,GAAMC,EAAAA,EAAAA,KAAND,EACR,GAA0CE,EAAAA,EAAAA,KAAlCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAC1B,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAkBC,EAAAA,EAAAA,MAAYC,MAiBpC,OAfAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAgB,IAAIC,gBACpBC,EAAU,yCAAG,4GAGLV,EAAYW,iDAAA,oCAAiEP,GAAmBI,GAH3F,OAIXL,GAAe,GAJJ,uGAAH,qDAQhBO,MAED,CAACV,EAAaI,IAEbN,GACO,SAAC,IAAD,IAIPC,GAEAL,EAAMkB,KAAKC,MAAMd,IACV,iBAAKe,UAAWC,EAAAA,EAAAA,iBAAhB,WACH,uBAAIrB,EAAIsB,iBACR,SAAC,KAAD,CAASC,GAAE,WAAMC,EAAAA,EAAAA,MAAN,YAAmBA,EAAAA,EAAAA,QAAnB,YAAkCA,EAAAA,EAAAA,UAAlC,2BAAX,SAAsFvB,EAAE,gCAK3FG,GAAaI,GAEV,gBAAKY,UAAWC,EAAAA,EAAAA,eAAhB,UACI,wBAAKpB,EAAE,6BAHnB,I,mBC5CJ,KAAgB,iBAAmB,wCAAwC,qBAAuB,4CAA4C,YAAc,mCAAmC,aAAe,oCAAoC,WAAa,kCAAkC,cAAgB,qCAAqC,eAAiB","sources":["users/pages/auth/AccountActivation.js","webpack://envelope-frontend/./src/users/pages/auth/PasswordReset.module.css?1aa1"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { NavLink, useParams } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport LoaderSpinner from '../../../components/ui/LoaderSpinner'\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook'\r\nimport { url } from '../../../utils/urls/urls'\r\nimport classes from './PasswordReset.module.css'\r\n\r\nconst AccountActivation = () => {\r\n\r\n    const { t } = useTranslation()\r\n    const { isLoading, error, sendRequest } = useHttpClient()\r\n    const [isActivated, setIsActivated] = useState(true)\r\n    const activationToken = useParams().token\r\n\r\n    useEffect(() => {\r\n\r\n        const httpAbortCtrl = new AbortController()\r\n        const fetchUsers = async () => {\r\n\r\n            try {\r\n                await sendRequest(process.env.REACT_APP_BACKEND_URL + `/users/account-activation/${activationToken}`, httpAbortCtrl);\r\n                setIsActivated(true)\r\n\r\n            } catch (err) { }\r\n        }\r\n        fetchUsers()\r\n\r\n    }, [sendRequest, activationToken])\r\n\r\n    if (isLoading) {\r\n        return <LoaderSpinner />\r\n    }\r\n\r\n    let err;\r\n    if (error) {\r\n\r\n        err = JSON.parse(error)\r\n        return <div className={classes.invalidContainer}>\r\n            <p>{err.serverMessage}</p>\r\n            <NavLink to={`/${url.users}/${url.account}/${url.sendEmail}?requestType=activation`}>{t('resendActivationEmail')}</NavLink>\r\n\r\n        </div>\r\n    }\r\n\r\n    if (!isLoading && isActivated) {\r\n        return (\r\n            <div className={classes.successMessage}>\r\n                <h1>{t('activatedAccount')}</h1>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AccountActivation","// extracted by mini-css-extract-plugin\nexport default {\"invalidContainer\":\"PasswordReset_invalidContainer__ZPlWc\",\"generalFormContainer\":\"PasswordReset_generalFormContainer__-FE0K\",\"generalForm\":\"PasswordReset_generalForm__uUORo\",\"errorMessage\":\"PasswordReset_errorMessage__+9VRc\",\"formAction\":\"PasswordReset_formAction__1SnTe\",\"formActionBtn\":\"PasswordReset_formActionBtn__2DRxD\",\"successMessage\":\"PasswordReset_successMessage__L+2ri\"};"],"names":["err","t","useTranslation","useHttpClient","isLoading","error","sendRequest","useState","isActivated","setIsActivated","activationToken","useParams","token","useEffect","httpAbortCtrl","AbortController","fetchUsers","process","JSON","parse","className","classes","serverMessage","to","url"],"sourceRoot":""}