{"version":3,"file":"static/js/948.01c2618f.chunk.js","mappings":"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","sources":["webpack://envelope-frontend/./src/components/transfer/EnvelopeTransactions.module.css?f6df","components/transfer/EnvelopeTransactions.js","webpack://envelope-frontend/./src/components/ui/ErrorCard.module.css?1580","components/ui/ErrorCard.js","webpack://envelope-frontend/./src/envelopes/pages/EnvelopeItem.module.css?bb78","envelopes/pages/EnvelopeItem.js","webpack://envelope-frontend/./src/envelopes/pages/Envelopes.module.css?e6ac","envelopes/pages/Envelopes.js","utils/i18n/currencyMask.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backDrop\":\"EnvelopeTransactions_backDrop__AYXZ+\",\"formContainer\":\"EnvelopeTransactions_formContainer__3pw--\",\"bounceIn\":\"EnvelopeTransactions_bounceIn__gtSTU\",\"form\":\"EnvelopeTransactions_form__bBurX\",\"formTag\":\"EnvelopeTransactions_formTag__mJobT\",\"inputContainer\":\"EnvelopeTransactions_inputContainer__aNfe2\",\"inputCurrency\":\"EnvelopeTransactions_inputCurrency__h1b92\",\"formInputs\":\"EnvelopeTransactions_formInputs__zEp4s\",\"errorMessage\":\"EnvelopeTransactions_errorMessage__HVK9q\",\"formAction\":\"EnvelopeTransactions_formAction__7rI7n\",\"buttonOK\":\"EnvelopeTransactions_buttonOK__ndOIP\",\"buttonCancel\":\"EnvelopeTransactions_buttonCancel__XWcfW\",\"buttonError\":\"EnvelopeTransactions_buttonError__+Beh1\"};","import { useHttpClient } from \"../../shared/hooks/http-hook\"\r\nimport { useForm } from 'react-hook-form'\r\nimport { useContext, useState } from \"react\"\r\nimport LoaderSpinner from \"../ui/LoaderSpinner\"\r\nimport classes from './EnvelopeTransactions.module.css'\r\nimport ButtonRound from \"../ui/ButtonRound\"\r\nimport { useTranslation } from 'react-i18next'\r\nimport { AuthContext } from \"../../shared/context/auth-context\"\r\nimport {authHeaders} from '../../utils/headers/authHeader'\r\n\r\nconst EnvelopeTransactions = (props) => {\r\n    const authCtx = useContext(AuthContext)\r\n    const { t, i18n } = useTranslation()\r\n    const { isLoading, error, sendRequest } = useHttpClient()\r\n    const [insufficientFunds, setInsufficientFunds] = useState(false)\r\n    const {\r\n        register,\r\n        formState: { errors },\r\n        handleSubmit\r\n    } = useForm({\r\n        mode: \"onChange\"\r\n    });\r\n\r\n    const inputMask = () => {\r\n\r\n        let element = document.getElementById('valor')\r\n\r\n        let valor = element.value.replace(/[^\\d]+/gi, '');\r\n        let reversedValue = valor.split('').reverse().join('')\r\n        let resultado = \"\";\r\n        let mascara = i18n.language === 'pt' ? \"##.###.###,##\".split('').reverse().join('') : \"##,###,###.##\".split('').reverse().join('');\r\n        for (let x = 0, y = 0; x < mascara.length && y < reversedValue.length;) {\r\n            if (mascara.charAt(x) !== '#') {\r\n                resultado += mascara.charAt(x);\r\n                x++;\r\n            } else {\r\n                resultado += reversedValue.charAt(y);\r\n                y++;\r\n                x++;\r\n            }\r\n        }\r\n        element.value = resultado.split('').reverse().join('');\r\n    }\r\n\r\n    let err;\r\n    if (error) {\r\n        err = JSON.parse(error)\r\n    }\r\n\r\n    const inputElements = props.inputs && props.inputs.map(inpt => {\r\n\r\n        return <div key={inpt.name} className={classes.formInputs}>\r\n            <label>{inpt.label}</label>\r\n            <div className={classes.inputContainer}>\r\n                {props.currency ? <p className={classes.inputCurrency}>{t('currency')}</p> : null}\r\n                <input\r\n                    onKeyUp={inpt.keyUp ? inputMask : null}\r\n                    id={inpt.id ? inpt.id : null}\r\n                    type={inpt.type}\r\n                    step={inpt.step ? inpt.step : null}\r\n                    min={inpt.min ? inpt.min : null}\r\n                    max={inpt.max ? inpt.max : null}\r\n                    placeholder={inpt.placeholder ? inpt.placeholder : null}\r\n                    {...register(inpt.name, {\r\n                        required: inpt.requiredMessage || null,\r\n                        minLength: inpt.minLength ? {\r\n                            ...inpt.minLength\r\n                        } : null,\r\n                        maxLength: inpt.maxLength ? {\r\n                            ...inpt.maxLength\r\n                        } : null\r\n                    })}\r\n                />\r\n            </div>\r\n\r\n            {errors[inpt.name] && (\r\n                <p className={classes.errorMessage}>{errors[inpt.name].message}</p>\r\n            )}\r\n\r\n            {err && err.title && <p className={classes.errorMessage}>{err.title}</p>}\r\n            {err && err.insufficientFunds && <p className={classes.errorMessage}>{err.insufficientFunds}</p>}\r\n\r\n        </div>\r\n\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n        const headers = authHeaders(props.token, authCtx.csurfTk)\r\n        if (props.withdrawBudget) {\r\n\r\n            const valueFloat = parseFloat(data.budget)\r\n            const maxAllowed = parseFloat(props.withdrawBudget)\r\n\r\n            if (valueFloat >= maxAllowed) {\r\n                setInsufficientFunds(true)\r\n                return\r\n            }\r\n\r\n\r\n        }\r\n\r\n        let sendData;\r\n        if (data.budget) {\r\n\r\n            const normalized = i18n.language === 'pt' ? data.budget.replaceAll('.', '') : data.budget.replaceAll(',', '');\r\n            const budget = i18n.language === 'pt' ? normalized.replace(',', '.') : parseFloat(normalized)\r\n            sendData = {\r\n                budget\r\n            }\r\n        } else {\r\n            sendData = {\r\n                ...data,\r\n            }\r\n        }\r\n\r\n        try {\r\n            const httpAbortCtrl = new AbortController()\r\n            await sendRequest(props.url,\r\n                httpAbortCtrl,\r\n                props.method,\r\n                JSON.stringify(sendData),\r\n                headers\r\n                /* {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + props.token,\r\n                    'X-CSRF-TOKEN': authCtx.csurfTk,\r\n                    credentials: 'include'\r\n                } */\r\n            )\r\n\r\n            props.afterSubmitHandler()\r\n           \r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const cancel = (event) => {\r\n        event.preventDefault()\r\n        props.cancel()\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <LoaderSpinner />\r\n    }\r\n\r\n    const clearInsufficientFundsError = () => {\r\n        setInsufficientFunds(false)\r\n    }\r\n\r\n    return <>\r\n        <div className={classes.backDrop} onClick={cancel}></div>\r\n        <div className={classes.formContainer}>\r\n            <div className={classes.formTag}>\r\n                <p>{props.transactionType}</p>\r\n            </div>\r\n            {props.delete && <h3>{t('deleteEnvelope')}</h3>}\r\n\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    {inputElements}\r\n                </div>\r\n                <div className={classes.formAction}>\r\n                    <ButtonRound type=\"submit\" className={classes.buttonOK}>{t('send')}</ButtonRound>\r\n                    <ButtonRound onClick={cancel} className={classes.buttonCancel}>{t('cancel')}</ButtonRound>\r\n                </div>\r\n            </form>\r\n\r\n            {err && err.message && <p>{err.message}</p>}\r\n            {insufficientFunds && <>\r\n                <p>{t('sourceInsufficientFunds')}</p>\r\n                <ButtonRound className={classes.buttonError} onClick={clearInsufficientFundsError}>Ok</ButtonRound>\r\n            </>}\r\n\r\n        </div>\r\n\r\n    </>\r\n\r\n}\r\n\r\nexport default EnvelopeTransactions","// extracted by mini-css-extract-plugin\nexport default {\"errorCard\":\"ErrorCard_errorCard__JwCDV\"};","import classes from './ErrorCard.module.css'\r\n\r\nconst ErrorCard = props => {\r\n    return <div className={classes.errorCard}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default ErrorCard","// extracted by mini-css-extract-plugin\nexport default {\"envelopeInfo\":\"EnvelopeItem_envelopeInfo__ZIfng\",\"envelopeTag\":\"EnvelopeItem_envelopeTag__-U0Y1\",\"envelopeAction\":\"EnvelopeItem_envelopeAction__tl17m\"};","import classes from './EnvelopeItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { url } from '../../utils/urls/urls'\r\nimport { useContext, useState } from 'react'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\nimport envelopeIcon from '../../components/ui/img/envelope.png'\r\nimport EnvelopeTransactions from '../../components/transfer/EnvelopeTransactions'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { currencyMask } from '../../utils/i18n/currencyMask'\r\n\r\nconst EnvelopeItem = (props) => {\r\n\r\n    const { t, i18n } = useTranslation()\r\n\r\n    const authCtx = useContext(AuthContext)\r\n    const [isDelete, setIsDelete] = useState(false)\r\n\r\n    const onDeleteHandler = () => {\r\n        props.onDeleteHandler(props.id)\r\n    }\r\n\r\n    const openDeleteModal = () => {\r\n        setIsDelete(true)\r\n    }\r\n\r\n    const cancelDeleteModal = () => {\r\n        setIsDelete(false)\r\n    }\r\n\r\n    let envelopeBudget = currencyMask(props.budget, i18n.language)\r\n    return <>\r\n\r\n        {isDelete && <EnvelopeTransactions\r\n            transactionType={t('delete')}\r\n            method={'DELETE'}\r\n            inputs={null}\r\n            token={authCtx.token}\r\n            url={process.env.REACT_APP_BACKEND_URL + `/envelopes/${props.id}`}\r\n            cancel={cancelDeleteModal}\r\n            afterSubmitHandler={onDeleteHandler}\r\n            delete={true}\r\n\r\n        />}\r\n        \r\n        <div key={props.id} className={classes.envelopeItem}>\r\n\r\n            <div className={classes.envelopeTag}>\r\n                <img src={envelopeIcon} alt=\"envelope\" />\r\n                <h2>{props.title}</h2>\r\n            </div>\r\n\r\n            <div className={classes.envelopeInfo}>\r\n\r\n                <div>\r\n                    <h2>{t('availableBudget')}</h2>\r\n                    <p>{envelopeBudget}</p>\r\n                </div>\r\n\r\n                <div className={classes.envelopeAction}>\r\n                    <NavLink to={`/${url.envelopes}/${url.singleEnvelope}/${props.id}`}>{t('seeEnvelope')}</NavLink>\r\n                    <button onClick={openDeleteModal}>{t('delete')}</button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default EnvelopeItem","// extracted by mini-css-extract-plugin\nexport default {\"envelopeTop\":\"Envelopes_envelopeTop__A4A3V\",\"gridContainer\":\"Envelopes_gridContainer__ciCPD\",\"errorContainer\":\"Envelopes_errorContainer__WM7nl\",\"cards\":\"Envelopes_cards__wgxDp\"};","import { useContext, useEffect, useState } from \"react\"\r\nimport { NavLink } from 'react-router-dom'\r\nimport LoaderSpinner from \"../../components/ui/LoaderSpinner\"\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"\r\nimport { url } from '../../utils/urls/urls'\r\nimport EnvelopeItem from \"./EnvelopeItem\"\r\nimport classes from './Envelopes.module.css'\r\nimport ErrorCard from \"../../components/ui/ErrorCard\"\r\nimport { useTranslation } from 'react-i18next'\r\nimport { currencyMask } from '../../utils/i18n/currencyMask'\r\n\r\nconst Envelopes = () => {\r\n\r\n    const { t, i18n } = useTranslation()\r\n    const authCtx = useContext(AuthContext)\r\n    const { isLoading, error, sendRequest } = useHttpClient()\r\n    const [envelopes, setEnvelopes] = useState([])\r\n    const [totalBudget, setTotalBudget] = useState()\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const httpAbortCtrl = new AbortController()\r\n        try {\r\n            const fetchEnvelopes = async () => {\r\n\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/envelopes', httpAbortCtrl, 'GET', null, {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + authCtx.token                    \r\n                })\r\n\r\n                setEnvelopes(responseData.envelopes)\r\n\r\n                if (responseData.total_budget) {\r\n\r\n                    const totalBudgetFloat = parseFloat(responseData.total_budget.total_budget)\r\n                    setTotalBudget(totalBudgetFloat.toFixed(2))\r\n                } else {\r\n                    setTotalBudget('0.00')\r\n                }\r\n            }\r\n\r\n            fetchEnvelopes()\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }, [sendRequest, authCtx.token, authCtx.csurfTk])\r\n\r\n    if (isLoading) {\r\n        return <LoaderSpinner />\r\n    }\r\n\r\n    let err;\r\n    if (error) {\r\n        err = JSON.parse(error)\r\n    }\r\n\r\n    let fetchedTotalBudget;\r\n\r\n    if (totalBudget) {\r\n        let totalCurrency = currencyMask(totalBudget, i18n.language)\r\n        fetchedTotalBudget = <h2>{t('totalBudget')} {!totalBudget ? `${t('currency')} 0.00 ` : totalCurrency}</h2>\r\n    }\r\n\r\n    if (envelopes.length === 0) {\r\n\r\n        return <div className={classes.errorContainer}>\r\n            <div className={classes.envelopeTop}>\r\n                <h1>Envelopes</h1>\r\n                <div>\r\n                    {fetchedTotalBudget}\r\n                </div>\r\n            </div>\r\n            <ErrorCard>\r\n                <h1>{t('emptyEnvelopes')}</h1>\r\n                <NavLink as={NavLink} to={`/${url.envelopes}/${url.addEnvelope}`}>{t('createEnvelope')}</NavLink>\r\n\r\n            </ErrorCard>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if (err && err.serverMessage) {\r\n        return <p>{err.serverMessage}</p>\r\n    }\r\n\r\n    const onDeleteHandler = (deletedId) => {\r\n\r\n        const httpAbortCtrl = new AbortController()\r\n\r\n        try {\r\n            const fetchEnvelopes = async () => {\r\n\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/envelopes/`, httpAbortCtrl, 'GET', null, {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + authCtx.token\r\n                })\r\n\r\n                setEnvelopes(responseData.envelopes)\r\n                if (responseData.total_budget) {\r\n\r\n                    const totalBudgetFloat = parseFloat(responseData.total_budget.total_budget)\r\n                    setTotalBudget(totalBudgetFloat.toFixed(2))\r\n                } else {\r\n                    setTotalBudget('0.00')\r\n                }\r\n            }\r\n\r\n            fetchEnvelopes()\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    let envelopeArray;\r\n\r\n    if (!err && !isLoading && envelopes.length > 0) {\r\n\r\n        envelopeArray = envelopes.map(env => {\r\n            return <EnvelopeItem\r\n                key={env.env_id}\r\n                id={env.env_id}\r\n                title={env.title}\r\n                budget={env.budget}\r\n                onDeleteHandler={onDeleteHandler}\r\n                totalBudget={totalBudget}\r\n            />\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.envelopes}>\r\n\r\n            <div className={classes.envelopeTop}>\r\n                <h1>Envelopes</h1>\r\n                <div>\r\n                    {fetchedTotalBudget}\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={classes.gridContainer}>\r\n                {envelopeArray}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Envelopes","export const currencyMask = (data, lng) => {\r\n   \r\n    let currency;\r\n    if(lng === 'pt') {\r\n        currency = Intl.NumberFormat('pt-BR', {\r\n            style: 'currency',\r\n            currency: 'BRL',\r\n            minimumFractionDigits: 2\r\n        })\r\n    } else {\r\n        currency = Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumFractionDigits: 2           \r\n        })\r\n    }\r\n\r\n    const localCurrency = currency.format(data)\r\n    \r\n    return localCurrency\r\n}"],"names":["props","err","authCtx","useContext","AuthContext","useTranslation","t","i18n","useHttpClient","isLoading","error","sendRequest","useState","insufficientFunds","setInsufficientFunds","useForm","mode","register","errors","formState","handleSubmit","inputMask","element","document","getElementById","reversedValue","value","replace","split","reverse","join","resultado","mascara","language","x","y","length","charAt","JSON","parse","inputElements","inputs","map","inpt","className","classes","label","currency","onKeyUp","keyUp","id","type","step","min","max","placeholder","name","required","requiredMessage","minLength","maxLength","message","title","onSubmit","data","headers","authHeaders","token","csurfTk","withdrawBudget","valueFloat","parseFloat","budget","maxAllowed","normalized","replaceAll","sendData","httpAbortCtrl","AbortController","url","method","stringify","afterSubmitHandler","cancel","event","preventDefault","LoaderSpinner","onClick","transactionType","delete","ButtonRound","children","isDelete","setIsDelete","envelopeBudget","currencyMask","EnvelopeTransactions","process","onDeleteHandler","src","alt","to","fetchedTotalBudget","envelopes","setEnvelopes","totalBudget","setTotalBudget","useEffect","fetchEnvelopes","Authorization","responseData","total_budget","totalBudgetFloat","toFixed","totalCurrency","ErrorCard","as","NavLink","serverMessage","envelopeArray","deletedId","env","env_id","lng","Intl","NumberFormat","style","minimumFractionDigits","format"],"sourceRoot":""}