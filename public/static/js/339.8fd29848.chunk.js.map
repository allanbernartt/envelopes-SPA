{"version":3,"file":"static/js/339.8fd29848.chunk.js","mappings":"2JACA,MAA4B,6B,SCO5B,EANkB,SAAAA,GACd,OAAO,gBAAKC,UAAWC,EAAhB,SACFF,EAAMG,a,sJCHf,EAA+B,sCAA/B,EAAyF,2CAAzF,EAAiJ,oCAAjJ,EAAwM,0CAAxM,EAAgQ,qCAAhQ,EAAiT,mC,iDCkGjT,EAxFwB,WAEpB,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAC3B,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,IACI,IAAMC,EAAiB,yCAAG,kGAChBC,EAAgB,IAAIC,gBADJ,SAEKV,EAAYW,kEACnCF,EACA,MACA,KACA,CACI,eAAgB,mBAChBG,cAAe,UAAYlB,EAAQmB,QARrB,OAEhBC,EAFgB,OAWtBV,EAAgBU,EAAaC,MAXP,2CAAH,qDAcvBP,IACF,MAAOT,OAIV,CAACC,EAAaN,EAAQmB,QAMzB,GAAIf,EACA,OAAO,SAACkB,EAAA,EAAD,IAGX,GAAIjB,EACA,OAAO,UAACkB,EAAA,EAAD,YACH,wBAAKzB,EAAE,mBACP,SAAC0B,EAAA,EAAD,CAAaC,QAASlB,EAAtB,mBAIR,IAAMmB,EAAoBjB,EAAakB,OAAS,EAAIlB,EAAamB,KAAI,SAAAC,GAEjE,OAAO,gBAAIlC,UAAWC,EAAf,WACH,wBAAKiC,EAAMC,QACX,kBACCD,EAAME,KAAKH,KAAI,SAAAI,GACZ,IAAMC,EAASC,WAAWF,EAAEC,QAC5B,OAAO,4BACH,0BAAG,kBAAMtC,UAAWC,EAAjB,UAAqCE,EAAE,mBAAvC,OAAH,IAAuEA,EAAEkC,EAAEG,qBAC1EH,EAAE,oBAAqB,0BAAG,kBAAMrC,UAAWC,EAAjB,UAAqCE,EAAE,QAAvC,OAAH,IAA4DkC,EAAE,sBAA0B,KACxF,aAAvBA,EAAEG,kBAAkC,0BAAG,kBAAMxC,UAAWC,EAAjB,UAAqCE,EAAE,QAAvC,OAAH,IAA4DkC,EAAE,4BAA+B,0BAAG,kBAAMrC,UAAWC,EAAjB,UAAqCE,EAAE,MAAvC,OAAH,IAA0DkC,EAAE,4BAC9L,0BAAG,kBAAMrC,UAAWC,EAAjB,UAAqCE,EAAE,UAAvC,OAAH,IAAqF,aAAvBkC,EAAEG,iBAAF,WAAwCrC,EAAE,YAA1C,YAAyDmC,EAAOG,QAAQ,IAAxE,UAAkFtC,EAAE,YAApF,YAAmGmC,EAAOG,QAAQ,IAAhL,QAEA,oBANaJ,EAAEK,qBALqBR,EAAMC,SAgBrD,GAEL,OAAK1B,GAAaK,EAAakB,OAAS,GAE5B,iBAAKhC,UAAWC,EAAhB,WACJ,wBAAKE,EAAE,mBACP,gBAAKH,UAAWC,EAAhB,UACI,wBACK8B,UAMN,iBAAK/B,UAAWC,EAAhB,WACH,wBAAKE,EAAE,qBACP,SAAC0B,EAAA,EAAD,CAAa7B,UAAWC,EAAoB6B,QAjDrC,WACXd,EAAS,IAAD,OAAK2B,EAAAA,EAAAA,UAAL,YAAsBA,EAAAA,EAAAA,iBAgD1B,SAA8DxC,EAAE","sources":["webpack://envelope-frontend/./src/components/ui/ErrorCard.module.css?1580","components/ui/ErrorCard.js","webpack://envelope-frontend/./src/envelopes/pages/TransactionsLog.module.css?09d8","envelopes/pages/TransactionsLog.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"errorCard\":\"ErrorCard_errorCard__JwCDV\"};","import classes from './ErrorCard.module.css'\r\n\r\nconst ErrorCard = props => {\r\n    return <div className={classes.errorCard}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default ErrorCard","// extracted by mini-css-extract-plugin\nexport default {\"logContainer\":\"TransactionsLog_logContainer__7qt9s\",\"emptyLogContainer\":\"TransactionsLog_emptyLogContainer__ti+dW\",\"backButton\":\"TransactionsLog_backButton__PK3TU\",\"logListContainer\":\"TransactionsLog_logListContainer__WjBhJ\",\"logListItem\":\"TransactionsLog_logListItem__RdN9a\",\"listTitle\":\"TransactionsLog_listTitle__dwAzG\"};","import { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport LoaderSpinner from '../../components/ui/LoaderSpinner'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport classes from './TransactionsLog.module.css'\r\nimport { useTranslation } from 'react-i18next'\r\nimport ErrorCard from '../../components/ui/ErrorCard'\r\nimport ButtonRound from '../../components/ui/ButtonRound'\r\nimport { url } from '../../utils/urls/urls'\r\n\r\nconst TransactionsLog = () => {\r\n\r\n    const { t } = useTranslation()\r\n    const authCtx = useContext(AuthContext)\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n    const [transactions, setTransactions] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const fetchTransactions = async () => {\r\n                const httpAbortCtrl = new AbortController()\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/transactions-log\",\r\n                    httpAbortCtrl,\r\n                    'GET',\r\n                    null,\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: 'Bearer ' + authCtx.token\r\n                    })\r\n\r\n                setTransactions(responseData.data)\r\n            }\r\n\r\n            fetchTransactions()\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }, [sendRequest, authCtx.token])\r\n\r\n    const goBack = () => {\r\n        navigate(`/${url.envelopes}/${url.userEnvelopes}`)\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <LoaderSpinner />\r\n    }\r\n\r\n    if (error) {\r\n        return <ErrorCard>\r\n            <h2>{t('genericError')}</h2>\r\n            <ButtonRound onClick={clearError}>Ok</ButtonRound>\r\n        </ErrorCard>\r\n    }\r\n\r\n    const transactionsArray = transactions.length > 0 ? transactions.map(trans => {\r\n\r\n        return <li className={classes.logListItem} key={trans.date}>\r\n            <h2>{trans.date}</h2>\r\n            <hr></hr>\r\n            {trans.info.map(i => {\r\n                const amount = parseFloat(i.amount)\r\n                return <div key={i.transaction_id}>\r\n                    <p><span className={classes.listTitle}>{t('transactionType')}:</span> {t(i.transaction_type)}</p>\r\n                    {i['ENVELOPE SOURCE'] ? <p><span className={classes.listTitle}>{t('from')}:</span> {i['ENVELOPE SOURCE']}</p> : null}\r\n                    {i.transaction_type === 'withdraw' ? <p><span className={classes.listTitle}>{t('from')}:</span> {i['ENVELOPE DESTINATION']}</p> : <p><span className={classes.listTitle}>{t('to')}:</span> {i['ENVELOPE DESTINATION']}</p>}\r\n                    <p><span className={classes.listTitle}>{t('amount')}:</span> {i.transaction_type === 'withdraw' ? `-${t('currency')} ${amount.toFixed(2)}` : `${t('currency')} ${amount.toFixed(2)}`} </p>\r\n\r\n                    <hr></hr>\r\n                </div>\r\n            })}\r\n\r\n        </li>\r\n    }) : []\r\n\r\n    if (!isLoading && transactions.length > 0) {\r\n\r\n        return (<div className={classes.logContainer}>\r\n            <h1>{t('transactions')}</h1>\r\n            <div className={classes.logListContainer}>\r\n                <ul>\r\n                    {transactionsArray}\r\n                </ul>\r\n            </div>\r\n        </div>)\r\n\r\n    } else {\r\n        return <div className={classes.emptyLogContainer}>\r\n            <h1>{t('noTransactions')}</h1>\r\n            <ButtonRound className={classes.backButton} onClick={goBack}>{t('backToEnvelopes')}</ButtonRound>\r\n\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default TransactionsLog"],"names":["props","className","classes","children","t","useTranslation","authCtx","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","transactions","setTransactions","navigate","useNavigate","useEffect","fetchTransactions","httpAbortCtrl","AbortController","process","Authorization","token","responseData","data","LoaderSpinner","ErrorCard","ButtonRound","onClick","transactionsArray","length","map","trans","date","info","i","amount","parseFloat","transaction_type","toFixed","transaction_id","url"],"sourceRoot":""}